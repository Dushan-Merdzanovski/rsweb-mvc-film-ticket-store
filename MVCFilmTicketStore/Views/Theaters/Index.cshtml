@using MVCFilmTicketStore.DataTypes.Enums;
@model IEnumerable<MVCFilmTicketStore.Models.Theater>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Theater
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllSeatsNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllRows)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllColumns)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="card card-body" style="width: fit-content">
                        @{
                            if (item != null)
                            {
                                var theaterPicture = @item.TheaterPicture;

                                if (theaterPicture != null)
                                {
                                    <img src="~/files_images/@FolderType.THEATERS.ToString()/@theaterPicture" height="400px" width="600px" asp-append-version="true" />
                                }
                                else
                                {
                                    <img src="~/files_images/no_picture_found.jpg" height="200px" width="200px" asp-append-version="true" />
                                }
                            }
                        }
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllSeatsNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllRows)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllColumns)
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                    {
                        <button class="btn btn-success"><a style="text-decoration: none; color: white" asp-action="Edit" style="text-decoration: none; color: white" asp-route-id="@item.Id">Edit</a></button>
                    }
                    <button class="btn btn-info"><a style="text-decoration: none; color: white" asp-action="Details" asp-route-id="@item.Id">Details</a></button>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                    {
                        <button class="btn btn-danger"><a style="text-decoration: none; color: white" asp-action="Delete" asp-route-id="@item.Id">Delete</a></button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
